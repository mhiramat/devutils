#!/bin/sh
# chns : Pure shell script change namespace command

function bind() { # dir
  mount --bind $1 $RD$1
}

function robind() { # dir
  mount --bind -o ro $1 $RD$1
}

if [ "$1" = "--post" ]; then
  # Post : initialize environment
  TMPDIR=$2
  shift 2
  # Exit if any errors
  set -e

  # Make working directories
  RD=$TMPDIR/newroot
  UD=$TMPDIR/storage
  WD=$TMPDIR/temp
  mkdir $RD $UD $WD

  # Make private mount namespace
  mount --make-rprivate /

  # Prepare overlayed root directory
  mount -t overlay -o upperdir=$UD,lowerdir=/,workdir=$WD overlayfs $RD
  mkdir $RD/dev/pts
  touch $RD/dev/console
  touch $RD/dev/null

  # bind or ro-bind mount for some mountpoints
  bind /dev/null
  bind /dev/pts
  bind /dev/console
  # TODO: Add other devices here

  # Do not bind procfs, since it shows outside pids
  mount -t proc proc $RD/proc
  robind /proc/sys
  robind /proc/sysrq-trigger
  robind /proc/irq
  robind /proc/bus
  robind /sys

  # To unmount all unused mountpoints, use pivot_root to change root
  cd $RD
  mkdir .orig
  pivot_root . .orig
  umount -R .orig/ &>/dev/null || echo -n

  # The original root can not unmount because it referred by overlayfs.
  # So, we pivot to the root again, and chroot to overlay directory.
  cd /.orig/
  pivot_root . mnt/

  exec chroot mnt/ $@
fi

TMPDIR=`mktemp -d /tmp/chns-XXXXXXXX`

# Enter new namespace and exec command
sudo unshare -pf -m $0 --post $TMPDIR $@

# Cleanup workdir
sudo rm -rf $TMPDIR

